{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","fetchStream","streamId","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","autoComplete","renderError","onSubmit","formValues","props","error","touched","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","usersWhoLikedThis","comments","history","push","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","match","params","id","Fragment","deleteStream","to","stream","renderActions","state","ownProps","delete","StreamEdit","editStream","initialValues","_","pick","patch","StreamList","renderAdmin","currentUserId","style","display","renderLikeButton","isSignedIn","userFound","forEach","removeLikeFromStream","backgroundColor","color","likeStream","fetchStreams","map","key","textAlign","renderStreams","renderCreateButton","Object","values","filter","user","StreamShow","videoRef","createRef","buildPlayer","player","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onSignInClick","signIn","onSignOutClick","signOut","window","gapi","client","init","clientId","process","scope","then","auth2","getAuthInstance","currentUser","getId","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","omit","mapKeys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","render","store","createStore","reducers","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.58e7a721.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({ baseURL: 'http://localhost:3001' });\n","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();\n","import streams from '../apis/streams';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n  return {\n    type: 'SIGN_IN',\n    payload: userId,\n  };\n};\n\nexport const signOut = (userId) => {\n  return {\n    type: 'SIGN_OUT',\n    payload: userId,\n  };\n};\n\n// Action creator for liking a stream:\n\nexport const likeStream = (userId, streamId) => async (dispatch, getState) => {\n  const { usersWhoLikedThis } = getState().streams[streamId];\n  const response = await streams.patch(`/streams/${streamId}`, {\n    usersWhoLikedThis: [...usersWhoLikedThis, userId],\n  });\n  dispatch({ type: 'LIKE_STREAM', payload: response.data });\n};\n\n// Action creator for un-liking a liked stream:\n\nexport const removeLikeFromStream = (userId, streamId) => async (\n  dispatch,\n  getState\n) => {\n  const { usersWhoLikedThis } = getState().streams[streamId];\n  const response = await streams.patch(`/streams/${streamId}`, {\n    usersWhoLikedThis: [...usersWhoLikedThis].filter((user) => user !== userId),\n  });\n  dispatch({ type: 'REMOVE_STREAM_LIKE', payload: response.data });\n};\n\n// Action creator for creating a comment on a stream:\n\nexport const createComment = (streamId, userId, body) => async (\n  dispatch,\n  getState\n) => {\n  const currentComments = getState().streams[streamId].comments;\n  const response = await streams.patch(`/streams/${streamId}`, {\n    comments: [...currentComments, { body, userId }],\n  });\n  dispatch({ type: 'CREATE_COMMENT', payload: response.data });\n};\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', {\n    ...formValues,\n    userId,\n    usersWhoLikedThis: [],\n    comments: [],\n  });\n  dispatch({\n    type: 'CREATE_STREAM',\n    payload: { ...response.data, userId },\n  });\n  history.push('/');\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get('/streams');\n  dispatch({ type: 'FETCH_STREAMS', payload: response.data });\n};\n\nexport const fetchStream = (streamId) => async (dispatch) => {\n  const response = await streams.get(`/streams/${streamId}`);\n  dispatch({ type: 'FETCH_STREAM', payload: response.data });\n};\n\nexport const deleteStream = (streamId) => async (dispatch) => {\n  await streams.delete(`/streams/${streamId}`);\n  history.push('/');\n  dispatch({ type: 'DELETE_STREAM', payload: streamId });\n};\n\nexport const editStream = (streamId, formValues) => async (dispatch) => {\n  const response = await streams.patch(`/streams/${streamId}`, formValues);\n  dispatch({ type: 'EDIT_STREAM', payload: response.data });\n  history.push('/');\n};\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        className=\"ui form error\"\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter description\"\n        />\n        <button className=\"ui button primary\" type=\"submit\">\n          Create stream\n        </button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title.';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description.';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({ form: 'streamForm', validate })(StreamForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  onSubmit = (formValues) => {\n    this.props.createStream(formValues);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Create a Stream</h3>\n        <StreamForm onSubmit={this.onSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createStream })(StreamCreate);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"ui dimmer modals visible active\" onClick={props.onDismiss}>\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{props.title}</div>\n        <div className=\"content\">{props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport Modal from '../../components/Modal';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport history from '../../history';\nimport { deleteStream, fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const { id } = this.props.match.params;\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.props.deleteStream(id)}\n          className=\"ui button negative\"\n        >\n          Delete\n        </button>\n        <Link to=\"/\" className=\"ui button\">\n          Cancel\n        </Link>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal\n          title=\"Delete Stream\"\n          content={`Are you sure you want to delete \"${this.props.stream.title}\"?`}\n          actions={this.renderActions()}\n          onDismiss={() => history.push('/')}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n  StreamDelete\n);\n","import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport StreamForm from './StreamForm';\nimport { fetchStream, editStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  // Action creator runs b/c so that when you refresh the page, state doesn't vanish.\n  // Remember how he said every component should fetch its own data? That's what he was talking about.\n  // If state vanished, then you wouldn't be able to access that specific stream in the first place.\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  // Making an actual onSubmit handler is always a good convention to follow.\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.stream.id, formValues);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, 'title', 'description')}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchStreams } from '../../actions';\nimport { likeStream, removeLikeFromStream } from '../../actions';\n\n// The reason we create a class-based component is b/c we want to call the componentDidMount lifecycle method.\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin = (stream) => {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div style={{ display: 'inline-block' }}>\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  renderLikeButton = (stream) => {\n    if (this.props.isSignedIn) {\n      let userFound = false;\n      stream.usersWhoLikedThis.forEach((userId) => {\n        if (userId === this.props.currentUserId) {\n          userFound = true;\n        }\n      });\n\n      if (!userFound) {\n        return (\n          <button\n            className=\"ui button\"\n            onClick={() =>\n              this.props.likeStream(this.props.currentUserId, stream.id)\n            }\n            style={{\n              backgroundColor: '#1abc9c',\n              color: '#fff',\n              display: 'inline-block',\n            }}\n          >\n            <i className=\"icon thumbs up\" />\n            Like\n          </button>\n        );\n      } else {\n        return (\n          <button\n            className=\"ui button\"\n            onClick={() =>\n              this.props.removeLikeFromStream(\n                this.props.currentUserId,\n                stream.id\n              )\n            }\n            style={{\n              backgroundColor: '#16a085',\n              color: '#fff',\n              display: 'inline-block',\n            }}\n          >\n            <i className=\"icon thumbs up\" />\n            Liked\n          </button>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  renderStreams() {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          <div className=\"right floated content\">\n            {this.renderLikeButton(stream)}\n            {this.renderAdmin(stream)}\n          </div>\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/streams/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreateButton() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderStreams()}</div>\n        {this.renderCreateButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams,\n  likeStream,\n  removeLikeFromStream,\n})(StreamList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport flv from 'flv.js';\n\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.props.fetchStream(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`,\n    });\n\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      // If there currently is no stream, show a loading message.\n      return <div>Loading...</div>;\n    }\n\n    const { title, description } = this.props.stream;\n\n    return (\n      <div>\n        <video ref={this.videoRef} style={{ width: '75%' }} controls />\n        <h1>{title}</h1>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  // We're defining a componentDidMount method so that we can check if the user is logged in as soon as the app starts.\n  // gapi library is used by many sites, so you need to load more functionality from the Google servers.\n  componentDidMount() {\n    // Loading the additional functionality from the Google servers takes some time, so we add a callback.\n    // Callback gets executed when the additional functionality is loaded.\n    window.gapi.load('client:auth2', () => {\n      // We initialize the library with our clientId and the scope (what we want to access).\n      window.gapi.client\n        .init({\n          clientId: process.env.REACT_APP_CLIENT_ID,\n          scope: 'email',\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n\n          if (this.auth.isSignedIn.get()) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n          } else {\n            this.props.signOut(this.auth.currentUser.get().getId());\n          }\n\n          // When the component is rendered, see if the user is signed in and have the state reflect this:\n\n          // Change the state whenever the user's sign-in status changes:\n\n          this.auth.isSignedIn.listen((isSignedIn) => {\n            if (isSignedIn) {\n              this.props.signIn(this.auth.currentUser.get().getId());\n            } else {\n              this.props.signOut(this.auth.currentUser.get().getId());\n            }\n          });\n        });\n    });\n  }\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"red ui button google\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"red ui button google\">\n          <i className=\"google icon\" />\n          Sign In\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to=\"/\" className=\"item\">\n        Streamer\n      </Link>\n      <div className=\"right menu\">\n        <Link to=\"/\" className=\"item\">\n          All Streams\n        </Link>\n        <GoogleAuth />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport StreamCreate from '../components/streams/StreamCreate';\nimport StreamDelete from '../components/streams/StreamDelete';\nimport StreamEdit from '../components/streams/StreamEdit';\nimport StreamList from '../components/streams/StreamList';\nimport StreamShow from '../components/streams/StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\n// react-router-dom cares only about the part of the URL after the base URL.\n// For example, in localhost:3000/page-two react-router only cares about /page-two.\n\n// BrowserRouter component has an object called \"history\" that stores the current URL.\n// history sends that URL to BrowserRouter and BrowserRouter sends it to each Route component to see if the path matches up.\n// Then you get conditional rendering of the components based on what URL you're on.\n// If extractedPath.contains(path) is true, then the component is shown.\n// When you write a prop within a component with no value (ex. <Route exact />), exact={true}.\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={StreamList} />\n          <Route path=\"/streams/new\" component={StreamCreate} />\n          <Route path=\"/streams/edit/:id\" component={StreamEdit} />\n          <Route path=\"/streams/delete/:id\" component={StreamDelete} />\n          <Route path=\"/streams/:id\" component={StreamShow} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return { ...state, userId: action.payload, isSignedIn: true };\n    case 'SIGN_OUT':\n      return { ...state, userId: null, isSignedIn: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  streams: streamReducer,\n});\n","import _ from 'lodash';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case 'CREATE_STREAM':\n      return { ...state, [action.payload.id]: action.payload };\n    case 'DELETE_STREAM':\n      return _.omit(state, action.payload);\n    case 'EDIT_STREAM':\n      return { ...state, [action.payload.id]: action.payload };\n    case 'FETCH_STREAMS':\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case 'FETCH_STREAM':\n      return { ...state, [action.payload.id]: action.payload };\n    case 'LIKE_STREAM':\n      return { ...state, [action.payload.id]: action.payload };\n    case 'REMOVE_STREAM_LIKE':\n      return { ...state, [action.payload.id]: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nReactDOM.render(\n  <Provider\n    store={createStore(reducers, composeEnhancers(applyMiddleware(thunk)))}\n  >\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}